name: Build and Deploy Docker Image 

on:
  push:
    branches: [ "main" ]
  pull_request:
   branches: [ "main" ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }} # apt-diode-386016
  GAR_LOCATION: us-central1 # TODO: update region of the Artifact Registry
  GKE_CLUSTER: cluster-1    # TODO: update to cluster name
  GKE_ZONE: asia-east1-a   # TODO: update to cluster zone
  DEPLOYMENT_NAME: node-app-deployment # TODO: update to deployment name
  REPOSITORY: node-repo # TODO: update to Artifact Registry docker repository
  IMAGE: art-node

jobs:

  build-push-image:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME  }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    # - name: Get Git Commit Hash
    #   id: git_commit_hash
    #   run: echo "::set-output name=hash::$(git rev-parse --short HEAD)"
    
    - name: Build the Docker image
      run: docker build ./server --file ./server/Dockerfile --tag ${{ secrets.DOCKER_USERNAME  }}/k8s-node-app:"$GITHUB_SHA"
    
    - name: Push image on Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME  }}/k8s-node-app:"$GITHUB_SHA"

  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    needs: build-push-image
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Alternative option - authentication via credentials json
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    # - name: Docker configuration
    #   run: gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev
    # Get the GKE credentials so we can deploy to the cluster
    # - name: Set up GKE credentials
    #   uses: google-github-actions/get-gke-credentials@v0
    #   with:
    #     cluster_name: ${{ env.GKE_CLUSTER }}
    #     location: ${{ env.GKE_ZONE }}

    # Build the Docker image
    # - name: Build
    #   run: |-
    #     docker build ./server --file ./server/Dockerfile \
    #       --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
    #       --build-arg GITHUB_SHA="$GITHUB_SHA" \
    #       --build-arg GITHUB_REF="$GITHUB_REF"

    # Push the Docker image to Google Artifact Registry
    # - name: Publish
    #   run: |-
    #     docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"
    # Set up kustomize
    - name: Set up Kustomize
      working-directory: k8s_objects
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      working-directory: k8s_objects
      run: |-
        # replacing the image name in the k8s template
        # ./kustomize edit set image LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
        kubectl set image deployment/node-app-deployment node-app-container=loveleshagrawal/k8s-node-app:"$GITHUB_SHA"
        # ./kustomize build . | kubectl apply -f -
        # kubectl apply -f node-app.deploy.yaml
        # kubectl rollout status deployment/$DEPLOYMENT_NAME
        # kubectl get services -o wide
    - name: Apply changes to GKE
      working-directory: k8s_objects
      run: |
        gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --zone ${{ env.GKE_ZONE }} --project ${{ env.PROJECT_ID }}
        kubectl apply -f node-app.deploy.yaml
